{"version":3,"file":"angular-resize-event.umd.js.map","sources":["ng://angular-resize-event/lib/resized-event.ts","ng://angular-resize-event/lib/resized.directive.ts","ng://angular-resize-event/lib/angular-resized-event.module.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nexport class ResizedEvent {\r\n  constructor(\r\n    readonly element: ElementRef,\r\n    readonly newWidth: number,\r\n    readonly newHeight: number,\r\n    readonly oldWidth: number,\r\n    readonly oldHeight: number\r\n  ) {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ResizeSensor } from 'css-element-queries';\r\nimport { ResizedEvent } from './resized-event';\r\n\r\n@Directive({\r\n  selector: '[resized]'\r\n})\r\nexport class ResizedDirective implements OnInit {\r\n\r\n  @Output()\r\n  readonly resized = new EventEmitter<ResizedEvent>();\r\n\r\n  private oldWidth: number;\r\n  private oldHeight: number;\r\n\r\n  constructor(private readonly element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    new ResizeSensor(this.element.nativeElement, _ => this.onResized());\r\n    this.onResized();\r\n  }\r\n\r\n  private onResized() {\r\n    const newWidth = this.element.nativeElement.clientWidth;\r\n    const newHeight = this.element.nativeElement.clientHeight;\r\n\r\n    if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\r\n      return;\r\n    }\r\n\r\n    const event = new ResizedEvent(\r\n      this.element,\r\n      newWidth,\r\n      newHeight,\r\n      this.oldWidth,\r\n      this.oldHeight\r\n    );\r\n\r\n    this.oldWidth = this.element.nativeElement.clientWidth;\r\n    this.oldHeight = this.element.nativeElement.clientHeight;\r\n\r\n    this.resized.emit(event);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResizedDirective } from './resized.directive';\r\n\r\n@NgModule({\r\n  declarations: [ResizedDirective],\r\n  imports: [CommonModule],\r\n  exports: [ResizedDirective]\r\n})\r\nexport class AngularResizedEventModule { }\r\n"],"names":["EventEmitter","ResizeSensor","Directive","ElementRef","Output","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAEA;QACE,sBACW,OAAmB,EACnB,QAAgB,EAChB,SAAiB,EACjB,QAAgB,EAChB,SAAiB;YAJjB,YAAO,GAAP,OAAO,CAAY;YACnB,aAAQ,GAAR,QAAQ,CAAQ;YAChB,cAAS,GAAT,SAAS,CAAQ;YACjB,aAAQ,GAAR,QAAQ,CAAQ;YAChB,cAAS,GAAT,SAAS,CAAQ;SACxB;QACN,mBAAC;IAAD,CAAC;;;;;;ACVD;QAeE,0BAA6B,OAAmB;YAAnB,YAAO,GAAP,OAAO,CAAY;YALvC,YAAO,GAAG,IAAIA,iBAAY,EAAgB,CAAC;SAMnD;;;;QAED,mCAAQ;;;YAAR;gBAAA,iBAIC;;gBAFC,IAAIC,8BAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,SAAS,EAAE,GAAA,CAAC,CAAC;gBACpE,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;;;;;QAEO,oCAAS;;;;YAAjB;;oBACQ,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW;;oBACjD,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY;gBAEzD,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC9D,OAAO;iBACR;;oBAEK,KAAK,GAAG,IAAI,YAAY,CAC5B,IAAI,CAAC,OAAO,EACZ,QAAQ,EACR,SAAS,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,CACf;gBAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC;gBACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC;gBAEzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;;oBAxCFC,cAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;qBACtB;;;;;wBANmBC,eAAU;;;;8BAS3BC,WAAM;;QAqCT,uBAAC;KA1CD;;;;;;ACJA;QAIA;SAK0C;;oBALzCC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAACC,mBAAY,CAAC;wBACvB,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;QACwC,gCAAC;KAL1C;;;;;;;;;;;;;;;;;;;;;;;;"}
