{"version":3,"sources":["ng://angular-resize-event/lib/resized-event.ts","ng://angular-resize-event/lib/resized.directive.ts","ng://angular-resize-event/lib/angular-resized-event.module.ts"],"names":["ResizedEvent","element","newWidth","newHeight","oldWidth","oldHeight","this","ResizedDirective","resized","EventEmitter","prototype","ngOnInit","_this","ResizeSensor","nativeElement","_","onResized","clientWidth","clientHeight","event","emit","Directive","args","selector","ElementRef","Output","AngularResizedEventModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"iaAEA,IAAAA,EACE,SAAAA,EACWC,EACAC,EACAC,EACAC,EACAC,GAJAC,KAAAL,QAAAA,EACAK,KAAAJ,SAAAA,EACAI,KAAAH,UAAAA,EACAG,KAAAF,SAAAA,EACAE,KAAAD,UAAAA,GCRbE,EAAA,WAeE,SAAAA,EAA6BN,GAAAK,KAAAL,QAAAA,EALpBK,KAAAE,QAAU,IAAIC,EAAAA,aAoCzB,OA5BEF,EAAAG,UAAAC,SAAA,WAAA,IAAAC,EAAAN,KAEE,IAAIO,EAAAA,aAAaP,KAAKL,QAAQa,cAAe,SAAAC,GAAK,OAAAH,EAAKI,cACvDV,KAAKU,aAGCT,EAAAG,UAAAM,UAAR,eACQd,EAAWI,KAAKL,QAAQa,cAAcG,YACtCd,EAAYG,KAAKL,QAAQa,cAAcI,aAE7C,GAAIhB,IAAaI,KAAKF,UAAYD,IAAcG,KAAKD,UAArD,KAIMc,EAAQ,IAAInB,EAChBM,KAAKL,QACLC,EACAC,EACAG,KAAKF,SACLE,KAAKD,WAGPC,KAAKF,SAAWE,KAAKL,QAAQa,cAAcG,YAC3CX,KAAKD,UAAYC,KAAKL,QAAQa,cAAcI,aAE5CZ,KAAKE,QAAQY,KAAKD,yBAvCrBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yDALQC,EAAAA,+CASjBC,EAAAA,UAqCHlB,EA9CA,GCAAmB,EAAA,WAIA,SAAAA,KAKyC,2BALxCC,EAAAA,SAAQL,KAAA,CAAC,CACRM,aAAc,CAACrB,GACfsB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACxB,OAE6BmB,EATzC","sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nexport class ResizedEvent {\r\n  constructor(\r\n    readonly element: ElementRef,\r\n    readonly newWidth: number,\r\n    readonly newHeight: number,\r\n    readonly oldWidth: number,\r\n    readonly oldHeight: number\r\n  ) {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ResizeSensor } from 'css-element-queries';\r\nimport { ResizedEvent } from './resized-event';\r\n\r\n@Directive({\r\n  selector: '[resized]'\r\n})\r\nexport class ResizedDirective implements OnInit {\r\n\r\n  @Output()\r\n  readonly resized = new EventEmitter<ResizedEvent>();\r\n\r\n  private oldWidth: number;\r\n  private oldHeight: number;\r\n\r\n  constructor(private readonly element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    new ResizeSensor(this.element.nativeElement, _ => this.onResized());\r\n    this.onResized();\r\n  }\r\n\r\n  private onResized() {\r\n    const newWidth = this.element.nativeElement.clientWidth;\r\n    const newHeight = this.element.nativeElement.clientHeight;\r\n\r\n    if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\r\n      return;\r\n    }\r\n\r\n    const event = new ResizedEvent(\r\n      this.element,\r\n      newWidth,\r\n      newHeight,\r\n      this.oldWidth,\r\n      this.oldHeight\r\n    );\r\n\r\n    this.oldWidth = this.element.nativeElement.clientWidth;\r\n    this.oldHeight = this.element.nativeElement.clientHeight;\r\n\r\n    this.resized.emit(event);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResizedDirective } from './resized.directive';\r\n\r\n@NgModule({\r\n  declarations: [ResizedDirective],\r\n  imports: [CommonModule],\r\n  exports: [ResizedDirective]\r\n})\r\nexport class AngularResizedEventModule { }\r\n"]}